// Здесь реализовывал базовые сортировки

#include <iostream>
#include <string>

using namespace std;

struct Man {
	string name;
	string surname;
	string patronymic;
	int accnum = 0;
};

void BubbleSort(double *A, const int& n, int& c) {
	double tmp = 0;
	for (int i = 0; i < n; ++i) {
		for (int j = 0; j < n-1; ++j) {
			if (A[j] > A[j + 1]) {
				c += 1;
				tmp = A[j];
				c += 1;
				A[j] = A[j + 1];
				c += 1;
				A[j + 1] = tmp;
				c += 1;
			}
		}
	}
}

void InsertionSort(double* A, const int& n, int& c) {
	double tmp = 0;
	int j = 0;
	for (int i = 1; i < n; ++i) {
		for (j = i; (A[j - 1] > A[j] && j >= 1); --j) {
			c += 1;
			tmp = A[j];
			c += 1;
			A[j] = A[j - 1];
			c += 1;
			A[j - 1] = tmp;
			c += 1;
		}
	}
}

void SelectionSort(double* A, const int& n, int& c) {
	double tmp = 0;
	int imin = 0;
	for (int i = 0; i < n; ++i) {
		imin = i;
		for (int j = i + 1; j < n; ++j) {
			if (A[j] < A[imin]) {
				imin = j;
				c += 1;
			}
		}
		tmp = A[i];
		c += 1;
		A[i] = A[imin];
		c += 1;
		A[imin] = tmp;
		c += 1;
	}
}

void InsertionSortS(Man* A, const int& n, int& c) {
	Man tmp;
	int j = 0;
	for (int i = 1; i < n; ++i) {
		for (j = i; (A[j - 1].accnum < A[j].accnum && j >= 1); --j) {
			tmp = A[j];
			A[j] = A[j - 1];
			A[j - 1] = tmp;
			c += 4;
		}
		c += 1;
	}
}

int main() {
	int n = 0, countB = 0, countI = 0, countS = 0, m = 0, i = 0, countSTR = 0;
	cout << "Input array length: " << endl;
	cin >> n;
	double* A = new double[n];
	cout << "Input array's elements" << endl;
	for (i = 0; i < n; ++i) {
		cin >> A[i];
	}
	BubbleSort(A, n, countB);
	InsertionSort(A, n, countI);
	SelectionSort(A, n, countS);
	for (int i = 0; i < n; ++i) {
		cout << A[i] << "  ";
	}
	cout << endl << countS << endl;
	cout << endl;
	cout << "Input number of people: ";
	cin >> n;
	Man* B = new Man[n];
	cout << endl;
	for (i = 0; i < n; ++i) {
		cout << "Enter name ";
		cin >> B[i].name;
		cout << "Enter surname ";
		cin >> B[i].surname;
		cout << "Enter patronymic ";
		cin >> B[i].patronymic;
		cout << "Enter account number ";
		cin >> B[i].accnum;
	}
	cout << "Array: ";
	for (i = 0; i < n; ++i) {
		cout << "N" << i+1 << "  " << B[i].name << "  " << B[i].surname << "  " << B[i].patronymic << "  " << B[i].accnum << endl;
	}
	InsertionSortS(B, n, countSTR);
	cout << endl;
	cout << endl << "Sorted structure: " << endl;
	for (i = 0; i < n; ++i) {
		cout << "N" << i + 1 << "  " << B[i].name << "  " << B[i].surname << "  " << B[i].patronymic << "  " << B[i].accnum << endl;
	}
	cout << "Operation of copy requires: " << 3. * sizeof(B[0]) << " operations." << endl;
	cout << "Number of changes: " << countSTR;
	delete[] A;
	delete[] B;
	return 0;
}
